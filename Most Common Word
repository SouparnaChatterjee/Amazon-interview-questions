Handling the Last Word:
Inside the loop, we only process a word when a non-alphabetic character (such as space, punctuation, etc.) is encountered. This works well for all words that are followed by some non-letter character.
However, if the paragraph ends with a letter, the last word will not be processed inside the loop because there is no non-alphabetic character to trigger the processing block.






class Solution {
public:
    string mostCommonWord(string paragraph, vector<string>& banned) {
        //a map, a set, an answer, a word string with "", the maxCount
    unordered_map<string,int> wordCount;
    unordered_set<string> bannedSet(banned.begin(), banned.end());
    string word="";
    string result;
    int maxCount=0;

    for(char& c:paragraph)
    {
        if(isalpha(c)) word+=tolower(c);// if it is an alphavbet, add it to word in lowercase
        else if(!word.empty())// we encounter a non-letter, but we have a word
        {
            if(bannedSet.find(word)==bannedSet.end())
            {wordCount[word]++;
            if(wordCount[word]>maxCount)
            {
                maxCount=wordCount[word];
                result=word;
            }
        }
        word=""; // case where it is empty, but we encounter non-letter
    }
    }
       if(!word.empty() && bannedSet.find(word) == bannedSet.end())
       {
        wordCount[word]++;
        if(wordCount[word]>maxCount)
            {
                maxCount=wordCount[word];
                result=word;
            }
       }
       return result;
    }
};
